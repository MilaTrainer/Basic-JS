// отсюда отправить файл
// Задание 8
// сделала
// Написать функцию, которой на вход подается строка,
// на выход она дает символы наоборот (разворачивает строку). Пример: «привет, Женя» -> «янеЖ ,тевирп»
// Обратите внимание: метод reverse существует только у массивов.

function stringSimble(string) {
  let result = string.split(""); //из строки в массив
  result.reverse(); //разворачивает
  return result.join(""); //возвращает снова в строку
} 
console.log(stringSimble("привет, Женя"));

// Задание 9
//  nameCodeStation = element.slice(nameStation);   ;Greenfield (передает с ;)
// Массив содержит строки с информацией о железнодорожных станциях на севере Англии. Строки представляют собой трёхбуквенный код станции, затем некоторые машиночитаемые данные, за которыми следует точка с запятой, а затем название станции, пригодное для чтения человеком.
// ПОДСКАЗКА:
// 1. Извлеките трёхбуквенный код станции и сохраните его в новой переменной.
// 2. Найдите номер символьного номера точки с запятой.
// 3. Извлеките название для чтения человеком, используя номер индекса точки с запятой в качестве контрольной точки и сохраните его в новой переменной.
// 4. Объедините две новые переменные и строк
let stations = [
  "MAN675847583748sjt567654;Manchester Piccadilly",
  "GNF576746573fhdg4737dh4;Greenfield",
  "LIV5hg65hd737456236dch46dg4;Liverpool Lime Street",
  "SYB4f65hf75f736463;Stalybridge",
  "HUD5767ghtyfyr4536dh45dg45dg3;Huddersfield",
];
console.log(stations);
// Необходимо извлечь код станции и имя и поместить их в строку со следующей структурой:
// MAN: Manchester Piccadilly
stations.forEach((element) => {
  const codeStation = element.slice(0, 3); // 3/ 1. Извлеките трёхбуквенный код станции и сохраните его в новой переменной.
  const nameStation = element.indexOf(";"); // 2.Найдите номер символьного номера точки с запятой.
  const nameCodeStation = element.slice(nameStation);
  const nameCodeStation1 = nameCodeStation.slice(1);
  console.log(codeStation + ": " + nameCodeStation1); // 4. Объедините две новые переменные и строк
});

// Задание 10

// Напишите функцию unique(arr), которая принимает массив, а возвращает новый массив, содержащий только уникальные элементы arr.
// Пример:
//  должен вывести "кришна, харе, :-O"
// ПОДСКАЗКА
// - создать новый массив
// - обойти исходный массив, если элемент отсутствует в новом - добавлять его в новый. Таким образом в новый добавятся только уникальные.
let strings = [
  "кришна",
  "кришна",
  "харе",
  "харе",
  "харе",
  "харе",
  "кришна",
  "кришна",
  ":-O",
];
// console.log(unique(strings) );

let stringsNew = [];
function unique(arr) {
  strings.forEach((item) => {
    // !(stringNew !== umdefined)
    if (!stringsNew.includes(item)) {
      stringsNew.push(item);
    }
  });
  return stringsNew;
}
console.log(stringsNew);
console.log(unique(strings));

// Задание 11
// решала сама, после просмотрела урок, где было решение
// всегда ли функцию необхолимо записывать в переменную const? 


// Женя и Юля изучают кошек. Каждая из них узнала у 10 владельцев кошек о возрасте их кошки и сохранила данные в массиве (по одному массиву для каждой девочки). На данный момент им просто интересно узнать, является ли кошка взрослой или котёнком.
// Кошка считается взрослой, если ей не менее 2 лет, и котёнком, если ей менее 2 лет.
// Создайте функцию verifyCats, которая принимает 2 массива возрастов кошек (catsJane и catsJulia) и выполняет следующие действия:
// 1. Женя выяснила, что владельцы первой и последней кошки на самом деле имеют собак, а не кошек! Поэтому удалите возраст собак из Жениного массива.
// 2. Создайте общий массив с данными Жени (исправленными) и Юли.
// 3. Для каждой кошки этого общего массива выведите в консоль текст:
// - если кошка взрослая -  Кошка № 1 взрослая, ей 6 лет
// - если котёнок - Кошка № 2 ещё котёнок
// 4. Вызовите функцию для двух наборов тестовых данных.
// Тестовые данные:
// 1.  Данные Жени [4, 5, 3, 11, 6, 2, 4, 1, 5, 9]
// Данные Юли [2, 4, 5, 1, 13, 2, 15, 8, 3, 7]
// 2.  Данные Жени [3, 5, 9, 14, 1, 2, 6, 8, 3, 10]
// Данные Юли [8, 2, 10, 1, 2, 5, 6, 3, 1, 4]

// В задании необходимо использовать методы массивов: forEach, slice, concat
const catsJane = [4, 5, 3, 11, 6, 2, 4, 1, 5, 9];

// 1. Женя выяснила, что владельцы первой и последней кошки на самом деле имеют собак, а не кошек!
// Поэтому удалите возраст собак из Жениного массива.
let catsJaneClone = catsJane.slice(1, -1);
console.log(catsJaneClone);

// 2. Создайте общий массив с данными Жени (исправленными) и Юли.
const catsJulia = [2, 4, 5, 1, 13, 2, 15, 8, 3, 7];
// const catsJuliaJane = catsJaneClone.concat(catsJulia);
// console.log(catsJuliaJane);

// 3. Для каждой кошки этого общего массива выведите в консоль текст:
// - если кошка взрослая -  Кошка № 1 взрослая, ей 6 лет
// - если котёнок - Кошка № 2 ещё котёнок
function verifyCats(array, array) {
  let catsJuliaJane = catsJaneClone.concat(catsJulia);
  catsJuliaJane.forEach((item, index) => {
    if (item >= 2) {
      console.log(`Кошка взрослая ${index}, ей ${item} лет`);
    } else {
      console.log(`Кошка ${index} ещё котёнок ${item}`);
    }
  });
}
verifyCats(catsJane, catsJulia);

// 4. Вызовите функцию для двух наборов тестовых данных.
catsJane.reverse();
catsJulia.reverse();
console.log(catsJulia);
console.log(catsJane);


// с урока решение
// const verifyCats = (array1, array2) => {
//   const newArray1 = array1.slice(1, array1.length-1);
//   const allCats = newArray1.concat(array2);
// allCats.forEach((element, index) => {
//   // через тернальный
//   let ageText = (element>= 2)? `Кошка ${index + 1} ей ${item} лет` : '${index + 1} ещё котёнок, ему ${item} лет'
//   console.log(ageText);

//   // без тернального
//   if (element >=2 ){
//     console.log(`Кошка ${index + 1} ей ${item} лет`)
//   }else{
//     console.log(`${index + 1} ещё котёнок, ему ${item} лет`)
//   }
//   })
// }

// let catsResult1= verifyCats([4, 5, 3, 11, 6, 2, 4, 1, 5, 9], [2, 4, 5, 1, 13, 2, 15, 8, 3, 7]);
// let catsResult2 = verifyCats([3, 5, 9, 14, 1, 2, 6, 8, 3, 10], [8, 2, 10, 1, 2, 5, 6, 3, 1, 4]);


// Задание 12
// Решить 4 задание из прошлой темы, используя метод filter

// Определить массив, например let arr = [5, 4, 3, 8, 0];
// Создать функцию filterFor(arr, a). Функция должна вернуть новый массив из элементов arr, но в нем должны содержаться элементы, которые больше или равны (>=) значения переменной a.
// Например, запуск функции filterFor(arr, 5) дает результат [5,8]
// запуск функции filterFor(arr, 10) дает результат []
// запуск функции filterFor(arr, 3.11) дает результат [4,5,8]

// Задание 13
// Описать функцию, которая принимает массив строк и возвращает массив, содержащий только строки более 3-х символов. Проверить работу функции на примере:  ['yes', 'hello', 'no', 'easycode', 'what'].

// Задание 14
// Отсортируйте массив массивов так, чтобы вначале располагались наименьшие массивы (размер массива определяется его длиной): [ [14, 45], [1], ['a', 'c', 'd'] ] → [ [1], [14, 45], ['a', 'c', 'd'] ]

// ПОДСКАЗКА. Для правильной сортировки метод sort принимает функцию, параметры которой a и b - это элементы массива. В данной задаче элементы массива, то есть параметры a и b, сами являются массивами и обладают всеми свойствами массивов.

// Задание 15
// Создайте функцию getAverageHumanAge, которая принимает массив возрастов кошек (catAges) и выполняет следующие действия по порядку:

// 1. Рассчитывает человеческий возраст по следующей формуле: если возраст кошки <= 2 года, человеческий возраст = возраст кошки * 10. Если кошке больше 2 лет, человеческий возраст = возраст кошки * 7. (сделать через map)
// 2. Исключает всех кошек младше 18 человеческих лет. (сделать через filter)
// 3. Возвращает средний человеческий возраст для всех взрослых кошек. (сумму для среднего посчитать через reduce)
// Вызовите функцию для обоих наборов тестовых данных.
// Тестовые данные:
// 1: [7 , 3, 2, 4, 1, 15, 8, 1, 9, 2]
// 2: [1, 16, 12, 4, 5, 1, 3, 11, 7, 2]

// В задании необходимо использовать методы массивов: map, filter, reduce




// // Задание 5
//решила
// Создайте функцию sumObjectValues, которая будет суммировать все значения свойств, которые являются числами. Сумму чисел необходимо вернуть из функции.
// Проверить работу функции можно на объекте:

function sumObjectValues (object1){
const result = Object.keys(object1)

result.filter((item) => {
  typeof object1[item] == 'number' 
})
}

const objectWithNumbers = {
  a: 10,
  b: 20,
  c: 'string',
  d: 12,
}